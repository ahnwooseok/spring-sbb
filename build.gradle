plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

configurations {
    mockitoAgent {
        transitive = false
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // mockito 관련 설정
    testImplementation 'org.mockito:mockito-core:5.14.2'  // 사용 중인 버전으로 변경
    mockitoAgent 'org.mockito:mockito-core:5.14.2'   // 에이전트용 딸림 라이브러리

    // spring-boot-devtools
    developmentOnly("org.springframework.boot:spring-boot-devtools")

    // lombok setting
    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')

    // h2 database
    runtimeOnly('com.h2database:h2')

    // jpa setting
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')

    // JUnit setting
    testImplementation('org.junit.jupiter:junit-jupiter')
    testRuntimeOnly('org.junit.platform:junit-platform-launcher')

    // Thymeleaf
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
    implementation('nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect')

    // layout
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.2.1'

    // spring boot validation
    implementation('org.springframework.boot:spring-boot-starter-validation')

    // spring security
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.thymeleaf.extras:thymeleaf-extras-springsecurity6')

    // markdown
    implementation('org.commonmark:commonmark:0.21.0')
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(Test).configureEach {
    // mockitoAgent jar를 javaagent로 지정
    def agentJar = configurations.mockitoAgent.singleFile
    jvmArgs("-javaagent:${agentJar}")
}
